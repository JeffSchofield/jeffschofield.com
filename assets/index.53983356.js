import{C as i,c as o,l as s,v as e,D as t}from"./vendor.fd246b83.js";const a={class:"markdown-body"},r=e("h1",null,"Tailwind CSS Rounded Inherit",-1),d=e("p",null,[t("This is a plugin for Tailwind CSS that adds "),e("code",null,"rounded-inherit"),t(" utilities which will get its value from the nearest parent\u2019s rounded value, no matter how deep the child element is. I wrote this plugin to solve a repetition problem I was having with certain component designs that required inner elements to have the same corner rounding as the parent. This plugin lets you specify what a corner\u2019s rounding should be at the root of the component and children elements can adapt to that.")],-1),c=[r,d],S="Tailwind CSS Rounded Inherit",w="2022-02-08T00:00:00.000Z",T="2022-02-08T00:00:00.000Z",g="Deeply nested border-radius inheritance in Tailwind CSS.",f="https://github.com/ShiftLimits/tailwindcss-rounded-inherit",C=["OPEN_SOURCE","SOFTWARE"],b=[],v={setup(h,{expose:n}){return n({frontmatter:{name:"Tailwind CSS Rounded Inherit",start_date:"2022-02-08T00:00:00.000Z",release_date:"2022-02-08T00:00:00.000Z",short_description:"Deeply nested border-radius inheritance in Tailwind CSS.",repo:"https://github.com/ShiftLimits/tailwindcss-rounded-inherit",categories:["OPEN_SOURCE","SOFTWARE"],meta:[]}}),i({meta:[]}),(p,m)=>(o(),s("div",a,c))}};export{C as categories,v as default,b as meta,S as name,T as release_date,f as repo,g as short_description,w as start_date};
