import{u as s}from"./vue.-sixQ7xP-CqcZNE4S.js";import{c as a,o as i,a as e}from"./index-CvEWBL4J.js";const n={class:"markdown-body"},d="Boids 2D",h="2021-01-12T00:00:00.000Z",g="2021-01-15T00:00:00.000Z",f="An agents simulation with flocking behaviors.",_=1,w=["SHADER","SIMULATION"],x=[],k={__name:"index",setup(l,{expose:o}){return o({frontmatter:{name:"Boids 2D",start_date:"2021-01-12T00:00:00.000Z",release_date:"2021-01-15T00:00:00.000Z",short_description:"An agents simulation with flocking behaviors.",carousel_aspect:1,categories:["SHADER","SIMULATION"],meta:[]}}),s({meta:[]}),(c,t)=>(i(),a("div",n,t[0]||(t[0]=[e("h1",null,"Boids 2D",-1),e("p",null,"This is a flocking agents simulation written in Unity with compute shaders as a project for the Arsiliath workshop. While some members of the workshop explored using texture-based solutions, myself and a few others explored more traditional sorting-based spatial partitioning solutions.",-1),e("p",null,"I built this project using Uniform Spatial Partitioning (as expertly explained in Chisolm) and learned how to implement a parallel prefix-sum operation for use in USP. The result was a simulation that could handle up to 5 million flocking agents in real time!",-1),e("h2",null,"Key Highlights",-1),e("ul",null,[e("li",null,"5 million agents interacting in complex ways in real time"),e("li",null,"Interactive simulation parameters allow for play"),e("li",null,"Customizable color gradients for more artistic expression")],-1)])))}};export{_ as carousel_aspect,w as categories,k as default,x as meta,d as name,g as release_date,f as short_description,h as start_date};
